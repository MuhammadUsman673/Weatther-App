import { useState,useEffect } from "react";
import reactLogo from "./assets/react.svg";
import viteLogo from "/vite.svg";
import "./App.css";
import Card from "./Components/Card";
import Input from "./Components/Input";
import Button from "./Components/Button";
import { useWeather } from "./Context/Weather";

function App() {
  const weather = useWeather(); // Ensure context is not null
  console.log(weather);
  useEffect(()=>{
     weather.fetchCurrenData();
  },[])

  return (
    <>
      <h1>Weather Forecast</h1>
      <Input />
      <Button value="Search" onClick={weather.fetchData} /> {/* Added optional chaining to avoid errors if `fetchData` is undefined */}
      <Card />
      <Button value="Refresh" /> {/* No functional changes */}
    </>
  );
}

export default App;



const baseUrl="https://api.weatherapi.com/v1/current.json?key=518fc8daa79b44c9be8140654243012"
export const getWeatherDataForCity=async(city)=>{
    const response= await fetch(`${baseUrl}&q=${city}&aqi=yes`)
    return response.json()
}

export const getWeatherDataForLocation=async(lat,lan)=>{
    const response= await fetch(`${baseUrl}&q=${lat},${lan}&aqi=yes`)
    return response.json()
}


import React from "react";
import { useWeather } from "../Context/Weather";
const Card=()=>{
    const weather=useWeather()
    return(
        <div className="Card">
<img src={weather?.data?.current?.condition?.icon} />
<h2>{weather?.data?.current?.temp_c} Â°C</h2>
<h5>{weather?.data?.location?.region},{weather?.data?.location?.country}</h5>
        </div>
    )
}
export default Card



import React from "react";
import { useWeather } from "../Context/Weather";

const Input = () => {
  const weather = useWeather();

//   console.log("Weather", weather); // Logs the weather context

  return (
    <input
      className="input"
      placeholder="Search Here"
      value={weather.city || ""} // Fixed: Added fallback for `undefined` value.
      onChange={(e) => weather.setCity(e.target.value)} // Correctly updates the city state.
    />
  );
};

export default Input;
 


import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'
import { WeatherProvider } from './Context/Weather.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <WeatherProvider>
    <App />
    </WeatherProvider>
  </StrictMode>,
)


import React from "react";
const Button=(props)=>{
    return(
        <div >
        <button className="Button" onClick={props.onClick}>{props.value}</button>
        </div>
    )
}
export default Button



import { createContext, useContext, useState } from "react";
import { getWeatherDataForCity,getWeatherDataForLocation } from "../api/Index";

export const WeatherContext = createContext(null);

export const useWeather = () => {
  return useContext(WeatherContext)
}

export const WeatherProvider = (props) => {
  const [data, setData] = useState(null);
  const [city, setCity] = useState(null); // Corrected: `cityName` renamed to `setCity`.
  const fetchData = async () => {
    try {
      const response = await getWeatherDataForCity(city); // Uses the `city` state variable
      setData(response); // Updates the `data` state with the fetched response
    } catch (error) {
      console.error("Error fetching weather data:", error); // Logs errors for debugging
    }
  };
  let fetchCurrenData=()=>{
    navigator.geolocation.getCurrentPosition((position)=>{
        getWeatherDataForLocation(position.coords.latitude,position.coords.longitude)
        .then((data)=>setData(data)) 
    })
  }